# =============================================
# APPLICATION.PROPERTIES
# Sistema de Reserva de Consultas Médicas
# Spring Boot Configuration
# =============================================

# =============================================
# INFORMACIÓN DE LA APLICACIÓN
# =============================================
spring.application.name=Sistema Reserva Consultas Médicas
server.port=8080

# =============================================
# CONFIGURACIÓN DE BASE DE DATOS POSTGRESQL
# =============================================
# IMPORTANTE: Cambiar estas credenciales según tu configuración local
spring.datasource.url=jdbc:postgresql://localhost:5432/sistema_consultas_medicas
spring.datasource.username=postgres
spring.datasource.password=TU_PASSWORD_AQUI
spring.datasource.driver-class-name=org.postgresql.Driver

# Pool de conexiones
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# =============================================
# CONFIGURACIÓN JPA / HIBERNATE
# =============================================
# Dialecto de PostgreSQL
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# NO recrear tablas (las tablas ya existen en la BD)
spring.jpa.hibernate.ddl-auto=validate

# Mostrar SQL en consola (útil para desarrollo)
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Propiedades adicionales de Hibernate
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false

# =============================================
# LOGGING
# =============================================
# Nivel de logging general
logging.level.root=INFO

# Logging específico para tu paquete
logging.level.com.uni.consultasmedicas=DEBUG

# Logging de SQL y parámetros
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Logging de Spring
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.security=DEBUG

# Archivo de logs
logging.file.name=logs/aplicacion.log
logging.file.max-size=10MB
logging.file.max-history=30

# =============================================
# JACKSON (Serialización JSON)
# =============================================
# Formato de fechas
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.time-zone=America/Lima

# Ignorar propiedades nulas en JSON
spring.jackson.default-property-inclusion=non_null

# Pretty print (solo en desarrollo)
spring.jackson.serialization.indent_output=true

# =============================================
# VALIDACIÓN
# =============================================
spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=false

# =============================================
# CORS (Cross-Origin Resource Sharing)
# =============================================
# Permitir peticiones desde el frontend
# En producción, cambiar * por la URL específica del frontend
spring.web.cors.allowed-origins=http://localhost:3000,http://localhost:8081
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

# =============================================
# MULTIPART / FILE UPLOAD
# =============================================
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=10MB

# =============================================
# ACTUATOR (Monitoreo)
# =============================================
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
management.info.env.enabled=true

# =============================================
# SWAGGER / OPENAPI (Documentación API)
# =============================================
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.operations-sorter=method
springdoc.swagger-ui.tags-sorter=alpha

# =============================================
# SPRING SECURITY
# =============================================
# En desarrollo, puedes deshabilitarlo temporalmente
# spring.security.enabled=false

# =============================================
# CONFIGURACIÓN DE EMAIL (Gmail ejemplo)
# =============================================
# Para enviar notificaciones por correo
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=TU_EMAIL@gmail.com
spring.mail.password=TU_APP_PASSWORD_AQUI
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com

# Remitente por defecto
app.mail.from=noreply@hospital.com
app.mail.from-name=Sistema de Consultas Médicas

# =============================================
# CONFIGURACIONES PERSONALIZADAS DE LA APP
# =============================================
# JWT Token
app.jwt.secret=MI_CLAVE_SECRETA_SUPER_SEGURA_CAMBIAR_EN_PRODUCCION_12345
app.jwt.expiration=86400000
# 86400000 ms = 24 horas

# URLs de la aplicación
app.frontend.url=http://localhost:8081
app.backend.url=http://localhost:8080

# Configuración de citas
app.citas.duracion-minima=15
app.citas.duracion-maxima=120
app.citas.anticipacion-minima-dias=1
app.citas.anticipacion-maxima-dias=30
app.citas.horario-inicio=08:00
app.citas.horario-fin=18:00

# =============================================
# NOTAS IMPORTANTES
# =============================================
# 1. Nunca subir este archivo a GitHub con contraseñas reales
# 2. Usar variables de entorno en producción
# 3. Para producción, crear application-prod.properties
# 4. Para desarrollo, crear application-dev.properties
# 5. Activar perfil: spring.profiles.active=dev 